@if (ShowConfirmation)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@ConfirmationTitle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                        @onclick="() => OnConfirmationChange(false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @((MarkupString)ConfirmationMessage)
                </div>
                <div class="modal-footer">
                    @if (ShowCancel)
                    {
                        <button type="button" class="btn btn-secondary" data-dismiss="modal"
                            @onclick="() => OnConfirmationChange(false)">
                            @CancelBtn
                        </button>
                    }
                    <button type="button" class="btn btn-success"
                        @onclick="() => OnConfirmationChange(true)">
                        @ConfirmBtn
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    protected bool ShowConfirmation { get; set; } = false;

    protected bool ShowCancel { get; set; } = true;

    [Parameter]
    public string ConfirmationTitle { get; set; } = "Confirm Delete";

    [Parameter]
    public string ConfirmationMessage { get; set; } = "Are you sure you want to delete";

    [Parameter]
    public string CancelBtn { get; set; } = "取消";

    [Parameter]
    public string ConfirmBtn { get; set; } = "確認";

    public void Show()
    {
        ShowConfirmation = true;
        StateHasChanged();
    }

    public void Alert()
    {
        ShowCancel = false;
        Show();
    }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    protected async Task OnConfirmationChange(bool value)
    {
        ShowConfirmation = false;
        ShowCancel = true;
        await ConfirmationChanged.InvokeAsync(value);
    }
}
