@typeparam TItem
@using System.Reflection

@if (propertyInfo != null && propertyInfo.Length > 0)
{
    <table class="@($"table {CssClass}")">
        <thead>
            <tr>
                @foreach (var property in propertyInfo)
                {
                    @if (!ColumnsToExcludeCSV.Contains(property.Name))
                    {
                        <th>
                            @property.Name
                        </th>
                    }
                }
            </tr>
        </thead>
        <tbody style="text-align:center">
            @for(int i = (Page - 1) * Row; i <  TotalData; i++)
            {
                var item = Items[i];
                <tr>
                    @foreach (var property in propertyInfo)
                    {
                        @if (!ColumnsToExcludeCSV.Contains(property.Name))
                        {
                            @if (property.Name.Equals(ColumnToLink))
                            {
                                <td>
                                    <a href="@Link/@property.GetValue(item)"> @property.GetValue(item) </a>
                                </td>
                            }
                            else
                            {
                                <td>
                                    @if (property.PropertyType.Name.Equals("Nullable`1"))
                                    {
                                        @property.GetValue(item)?.ToString()?.Split(' ')[0]
                                    }
                                    else
                                    {
                                        @property.GetValue(item)
                                    }
                                </td>
                            }
                        }
                    }
                </tr>
            }
            
        </tbody>
        <tfoot>
            <tr>
                <td colspan="@propertyInfo.Count()" title="Select Month" style="text-align:center"> 
                    <button class="btn" disabled="@IsFirstPage">
                        <span class="fa fa-chevron-left" title="Previous Page" @onclick="PrePage" ></span>
                    </button>
                    @(Page + "/" + TotalPage + "頁") 
                    <button class="btn" disabled="@IsFinalPage">
                        <span class="fa fa-chevron-right" title="Next Page" @onclick="NextPage"></span>
                    </button>
                </td>
            </tr>
        </tfoot>
    </table>
}

@code {

    PropertyInfo[]? propertyInfo;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Items != null && Items.Count > 0)
        {
            Type typeofItem = Items[0].GetType();
            propertyInfo = typeofItem.GetProperties();
            TotalData = (Items.Count < Page * Row) ? Items.Count : Page * Row;
            TotalPage = Items.Count / Row;
            if (Items.Count % Row != 0)
            {
                TotalPage++;
            }
            IsFinalPage = Page == TotalPage;
            IsFirstPage = Page == 1;
        }
    }

    private void NextPage()
    {
        Page++;
        IsFirstPage = Page == 1;
        IsFinalPage = Page == TotalPage;
        TotalData = (Items.Count < Page * Row) ? Items.Count : Page * Row;
        StateHasChanged();
    }

    private void PrePage()
    {
        Page--;
        IsFirstPage = Page == 1;
        IsFinalPage = Page == TotalPage;
        TotalData = (Items.Count < Page * Row) ? Items.Count : Page * Row;
        StateHasChanged();
    }

    [Parameter]
    public List<TItem> Items { get; set; } = new List<TItem>();

    [Parameter]
    public string ColumnsToExcludeCSV { get; set; } = string.Empty;

    [Parameter]
    public string CssClass { get; set; } = string.Empty;

    [Parameter]
    public string ColumnToLink { get; set; } = string.Empty;

    [Parameter]
    public string Link { get; set; } = string.Empty;

    [Parameter]
    public int Page { get; set; } = 1;

    [Parameter]
    public int Row { get; set; } = 10;

    private int TotalData { get; set; }

    private int TotalPage{ get; set; }

    private bool IsFirstPage { get; set; }

    private bool IsFinalPage { get; set; }
}
