<style>
    #calendar .prev,
    #calendar .next,
    #calendar td.day {
        cursor: pointer;
    }

    #calendar td:hover {
        background-color: lightgray;
    }

    #calendar td.old, td.new {
        color: #6c757d;
    }

    #calendar td ,th {
        text-align: center;
    }

    #calendar td.active{
        background-color: yellow;
    }
 </style>

<div class="card">
    <div class="card-header border-0">

        <h3 class="card-title">
            <i class="far fa-calendar-alt"></i>
            Calendar
        </h3>
        <!-- tools card -->
        <div class="card-tools">
            <!-- button with a dropdown -->
        </div>
        <!-- /. tools -->
    </div>
    <!-- /.card-header -->
    <div class="card-body pt-0">
        <!--The calendar -->
        <div id="calendar" style="width: 100%">
            <div class="bootstrap-datetimepicker-widget usetwentyfour">
                <ul class="list-unstyled">
                    <li class="show">
                        <div class="datepicker">
                            <div class="datepicker-days" style="">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th class="prev">
                                                <span class="fa fa-chevron-left" title="Previous Month" @onclick="MinMonth"></span>
                                            </th>
                                            <th colspan="5" title="Select Month"> @(Year + "年" + Month + "月") </th>
                                            <th class="next">
                                                <span class="fa fa-chevron-right" title="Next Month" @onclick="PlusMonth"></span>
                                            </th>
                                        </tr>
                                        <tr>
                                            @foreach (var head in THead)
                                            {
                                                <th class="dow">
                                                    @head
                                                </th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{NextFirstDay = 1;}
                                        @for (int i = 0, day = 1; day <= TotalDay; i++)
                                        {
                                            <tr>
                                                @for (int j = 0; j < 7; j++)
                                                {
                                                    @if (i == 0 && j < FirstDay)
                                                    {
                                                        <td class="day old">
                                                            @(PreLastDay - FirstDay + j + 1)
                                                        </td>
                                                    }
                                                    else if (day > TotalDay)
                                                    {
                                                        <td class="day new">
                                                            @NextFirstDay
                                                        </td>
                                                        NextFirstDay++;
                                                    }
                                                    else
                                                    {
                                                        int dayTemp = day;
                                                        <td class="day @(ChoseDay == dayTemp ? "active" : "")" @onclick="() => ChoseDateEvent(dayTemp)">
                                                            @day
                                                        </td>
                                                        day++;
                                                    }
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <!-- /.card-body -->
</div>

@code {
    //顯示年
    public int Year { get; set; } = DateTime.Now.Year;

    //顯示月
    public int Month { get; set; } = DateTime.Now.Month;

    //顯示日期
    public DateTime ShowDate { get; set; } = DateTime.Now;

    //顯示日期的前一個月
    public DateTime PreDate { get; set; } = DateTime.Now.AddMonths(-1);

    //選取日期的事件 回傳被選擇的日期
    [Parameter]
    public EventCallback<DateTime> SelectDateEvent { get; set; }

    //選擇的日期
    public DateTime SelectDate { get; set; } = DateTime.Now;

    //顯示月的第一天
    private int FirstDay { get { return (int)new DateTime(Year, Month, 1).DayOfWeek; } }

    //顯示前月的最後一天
    private int PreLastDay { get { return DateTime.DaysInMonth(PreDate.Year, PreDate.Month); } }

    //顯示後月的第一天
    private int NextFirstDay { get; set; } = 1;

    //顯示月的總天數
    private int TotalDay { get { return DateTime.DaysInMonth(Year, Month); } }

    //被選擇的日期
    private int ChoseDay { get; set; } = DateTime.Now.Day;

    //日曆上的日期
    private string[] THead = { "日", "一", "二", "三", "四", "五", "六" };

    //顯示下個月
    private void PlusMonth()
    {
        ShowDate = ShowDate.AddMonths(1);
        PreDate = PreDate.AddMonths(1);
        Year = ShowDate.Year;
        Month = ShowDate.Month;
        NextFirstDay = 1;
        StateHasChanged();
    }

    //顯示上個月
    private void MinMonth()
    {
        ShowDate = ShowDate.AddMonths(-1);
        PreDate = PreDate.AddMonths(-1);
        Year = ShowDate.Year;
        Month = ShowDate.Month;
        NextFirstDay = 1;
        StateHasChanged();
    }

    //選取日期的事件
    protected async Task ChoseDateEvent(int day)
    {
        ChoseDay = day;
        NextFirstDay = 1;
        SelectDate = new DateTime(Year, Month, day);
        await SelectDateEvent.InvokeAsync(SelectDate);
    }
}